doctype html
html(lang='en')
  head
    meta(charset='utf-8')
    title Angular
  body
    .reveal
      .slides
        section
          h1 Angular
          br
          span Richard Stromer
          br
          a(href='https://www.twitter.com/evolji') @evolji
          &nbsp;&bull;&nbsp;
          a(href='http://www.noxan.net') www.noxan.net
        section(data-background-image='/assets/header_image_photographers_2000px.jpg')
          img(src='/assets/picter.svg').picter-logo
          p A better way to manage photography submissions
          br
          a(href='https://www.picter.com').picter-link www.picter.com
        section
          section
            img(src=require('../assets/angular.svg'), style='max-height: 100px; box-shadow: none;')
            h1 Angular
            h4 One framework.
            h4 Mobile &amp; desktop.
            br
            a(href='https://angular.io/') www.angular.io

          section
            h1 Agenda

          section
            ul
              li History of AngularJS
              li Angular 2 or 4?
              li Introduction by examples
              li Tooling
              li Community and packages
              li Cross-platform

        section
          section
            h1 History of AngularJS
            a(href='https://angularjs.org/') www.angularjs.org

          section
            h2 Timeline

            ul
              li First release in 2010
              li Before Ember, React, Webpack, Meteor...
              li At the same year NPM was released
              li Just a year after first release of Node.js
              li Node.js was at version 0.3.0 (unstable)

          section
            h2 Abstract

            p An extension to make HTML interactive.

            ul
              li Great framework at its time.
              li Easy to setup and use. Gets complex at large scale.
              li Brings dynamic content to static websites.
              li A toolset for building a framework...

          section
            h2 Features

            ul
              li Plain JavaScript
              li Data bindings
              li Controller
              li Routing
              li Form validation
              li XHR / HTTP
              li Localization
              li Dependency injection
              li Testable

          section
            h2 Concepts

            ul
              li App and modules
              li Controllers
              li Filters
              li Services / Dependency injection
              li Directives (kind of components)

          section
            h2 Problems and shortcomes

            h4 Great framework but it grew old.

            ul
              li
                | At lot of ways to solve a problem
                br
                | Service, factory, provider?
              li New concepts (e.g. React components)
              li New language features (ES2015, imports)

            br
            p: a(href='https://www.youtube.com/watch?v=M_Wp-2XA9ZU') ng-wat - Shai Reznik

        section
          section
            h1 Angular
            h3 The new one. 2, 3 and 4?

          section
            h2 Why 4?

            p Kind of like Node.js

            p Node.js 0.12 and io.js 3.3 turned into 4.0

            p Angular Core 2.3 and Router 3.3 ...
              b  4.0

            p: small: a(href='http://angularjs.blogspot.de/2016/12/ok-let-me-explain-its-going-to-be.html') Angular Blog: Ok... let me explain

          section
            h2 What's new?

          section
            h2 What's new in 4.0?

            h1 Not much.

          section
            h2 What's new in 4.0?

            p Small improvements

            p Breaking change? Add another polyfil.

            p: small: a(href='http://angularjs.blogspot.de/2017/03/angular-400-now-available.html') Angular 4.0.0 Now Available

          section
            h2 What's new in 2.0?

            h1 Everything.

            small The name kind of remained the same.
            br
            small Angular. It's Angular now. Just Angular, no JS anymore.


        section
          section
            img(src=require('../assets/angular.svg'), style='max-height: 100px; box-shadow: none;')

            h1 Angular

            a(href='https://angular.io/') www.angular.io

          section
            h2 One framework.
            h2 Mobile &amp; desktop.

          section
            h2 Underlying frameworks

            ul
              li CoreJS
              li SystemJS / Webpack
              li ZoneJS
              li RxJS

          section
            h2 CoreJS

            p Polyfills for new EcmaScript features.

            a(href='https://github.com/zloirock/core-js') github.com/zloirock/core-js

          section
            h2 SystemJS / Webpack

            p Module loading and resolving.

            a(href='https://github.com/systemjs/systemjs') github.com/systemjs/systemjs
            br
            a(href='https://github.com/webpack/webpack') github.com/webpack/webpack

          section
            h2 ZoneJS

            p Execution contexts for async tasks.

            a(href='https://github.com/angular/zone.js') github.com/angular/zone.js

          section
            h2 RxJS

            p Reactive extensions.

            a(href='https://github.com/ReactiveX/rxjs') github.com/ReactiveX/rxjs

          section
            h2 Architecture

            p You write Angular applications by composing HTML
              b  templates
              |  with Angularized markup, writing
              b  component
              |  classes to manage those templates, adding application logic in
              b  services
              | , and boxing components and services in
              b  modules
              | .

          section
            h2 Architecture diagram

            img(src='../assets/angular-architecture.png', style='box-shadow: none;')

            p: small: a(href='https://angular.io/guide/architecture') angular.io/guide/architecture

          section
            h2 Let's see some
            h1 Code

            small Hint: Should I risk to code during my talk?

          section
            h2 Checklist

            ul
              li Modules
              li Components
                br
                | Templating, lifecycle hooks, pipes, directives
              li Data bindings
              li Services
              li Dependency injection
                br
                | TypeScript, reflect-metadata
              li Form handling
              li HTTP
              li Routing

          section
            h2 Further resources

            p: a(href='http://rxmarbles.com/') rxmarbles.com

        section
          section
            h1 Tooling

          section
            h2 Angular CLI

            p: a(href='https://cli.angular.io/') cli.angular.io

          section
            h2 Augury

            p Browser extension for development and debugging.

            p: a(href='https://augury.angular.io/') augury.angular.io

          section
            h2 Linting

            p: a(href='https://github.com/mgechev/codelyzer') github.com/mgechev/codelyzer
            p: a(href='https://github.com/palantir/tslint') github.com/palantir/tslint

        section
          section
            h1 Community &amp; packages

          section
            h2 ngrx/store

            p RxJS powered state management for Angular applications, inspired by Redux.

            p: a(href='https://github.com/ngrx/store') github.com/ngrx/store

          section
            h2 angular/material2

            p Material Design components for Angular.

            p: a(href='https://github.com/angular/material2') github.com/angular/material2

          section
            h2 Official style guide

            a(href='https://angular.io/guide/styleguide') angular.io/guide/styleguide

            p: small You might remember
              a(href='https://github.com/johnpapa/angular-styleguide')  johnpapa
              | .

          section
            h2 Community packages

            p You know about Python 2 and 3?

            p Not that bad but similar in some way.

            p: small Looking forward to see a guideline on how to provide packages.

        section
          section
            h1 Cross-platform

          section
            h2 Platforms &amp; toolings

            ul
              li Desktop / Electron
              li Mobile / Ionic
              li Mobile / NativeScript

            p: a(href='https://angular.io/resources') angular.io/resources

        section
          section
            h2 Further reading

            ul
              li: a(href='https://angular.io/docs') angular.io/docs
              li: a(href='https://angular.io/guide/cheatsheet') angular.io/guide/cheatsheet

        section
          section
            h1 Questions?

        section
          section
            h1 Thanks!
